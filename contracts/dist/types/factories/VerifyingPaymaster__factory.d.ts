import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { VerifyingPaymaster, VerifyingPaymasterInterface } from "../VerifyingPaymaster";
type VerifyingPaymasterConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class VerifyingPaymaster__factory extends ContractFactory {
    constructor(...args: VerifyingPaymasterConstructorParams);
    deploy(_entryPoint: PromiseOrValue<string>, _verifyingSigner: PromiseOrValue<string>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<VerifyingPaymaster>;
    getDeployTransaction(_entryPoint: PromiseOrValue<string>, _verifyingSigner: PromiseOrValue<string>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): VerifyingPaymaster;
    connect(signer: Signer): VerifyingPaymaster__factory;
    static readonly bytecode = "0x60a06040523480156200001157600080fd5b506040516200148538038062001485833981016040819052620000349162000155565b8162000040336200005f565b6200004b81620000af565b506001600160a01b03166080525062000194565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b620000b9620000db565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146200013a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640160405180910390fd5b565b6001600160a01b03811681146200015257600080fd5b50565b600080604083850312156200016957600080fd5b825162000176816200013c565b602084015190925062000189816200013c565b809150509250929050565b6080516112ce620001b760003960008181610134015261098001526112ce6000f3fe6080604052600436106100e85760003560e01c8063b0d691fe1161008a578063c399ec8811610059578063c399ec8814610290578063d0e30db0146102a5578063f2fde38b146102ad578063f465c77e146102cd57600080fd5b8063b0d691fe14610200578063bb9fe6bf1461022d578063c23a5cea14610242578063c266f2921461026257600080fd5b8063584465f2116100c6578063584465f214610180578063715018a6146101a05780638da5cb5b146101b5578063a9a23409146101e057600080fd5b80630396cb60146100ed578063205c28781461010257806323d9ac9b14610122575b600080fd5b6101006100fb366004610f2d565b6102fb565b005b34801561010e57600080fd5b5061010061011d366004610f7c565b610391565b34801561012e57600080fd5b506101567f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b34801561018c57600080fd5b5061010061019b366004610fa8565b61040d565b3480156101ac57600080fd5b5061010061045c565b3480156101c157600080fd5b5060005473ffffffffffffffffffffffffffffffffffffffff16610156565b3480156101ec57600080fd5b506101006101fb366004610fc5565b610470565b34801561020c57600080fd5b506001546101569073ffffffffffffffffffffffffffffffffffffffff1681565b34801561023957600080fd5b5061010061048a565b34801561024e57600080fd5b5061010061025d366004610fa8565b610510565b34801561026e57600080fd5b5061028261027d36600461106d565b6105a0565b604051908152602001610177565b34801561029c57600080fd5b50610282610680565b610100610718565b3480156102b957600080fd5b506101006102c8366004610fa8565b610784565b3480156102d957600080fd5b506102ed6102e83660046110aa565b610840565b6040516101779291906110f8565b610303610a6b565b6001546040517f0396cb6000000000000000000000000000000000000000000000000000000000815263ffffffff8316600482015273ffffffffffffffffffffffffffffffffffffffff90911690630396cb609034906024016000604051808303818588803b15801561037557600080fd5b505af1158015610389573d6000803e3d6000fd5b505050505050565b610399610a6b565b6001546040517f205c287800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8481166004830152602482018490529091169063205c287890604401600060405180830381600087803b15801561037557600080fd5b610415610a6b565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b610464610a6b565b61046e6000610aec565b565b610478610b61565b61048484848484610b85565b50505050565b610492610a6b565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bb9fe6bf6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156104fc57600080fd5b505af1158015610484573d6000803e3d6000fd5b610518610a6b565b6001546040517fc23a5cea00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83811660048301529091169063c23a5cea90602401600060405180830381600087803b15801561058557600080fd5b505af1158015610599573d6000803e3d6000fd5b5050505050565b6000813560208301356105b66040850185611173565b6040516105c49291906111d8565b6040519081900390206105da6060860186611173565b6040516105e89291906111d8565b6040805191829003822073ffffffffffffffffffffffffffffffffffffffff909516602083015281019290925260608201526080808201929092529083013560a08083019190915283013560c08083019190915283013560e08083019190915283013561010080830191909152830135610120820152610140015b604051602081830303815290604052805190602001209050919050565b6001546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009173ffffffffffffffffffffffffffffffffffffffff16906370a0823190602401602060405180830381865afa1580156106ef573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071391906111e8565b905090565b6001546040517fb760faf900000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff9091169063b760faf99034906024016000604051808303818588803b15801561058557600080fd5b61078c610a6b565b73ffffffffffffffffffffffffffffffffffffffff8116610834576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61083d81610aec565b50565b606060008061084e866105a0565b9050366000610861610120890189611173565b90925090506000610873601483611201565b905080604014806108845750806041145b61091257604080517f08c379a00000000000000000000000000000000000000000000000000000000081526020600482015260248101919091527f566572696679696e675061796d61737465723a20696e76616c6964207369676e60448201527f6174757265206c656e67746820696e207061796d6173746572416e6444617461606482015260840161082b565b610968610922836014818761123f565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506109629250889150610be79050565b90610c22565b73ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1614806109bf575032155b610a4b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f566572696679696e675061796d61737465723a2077726f6e67207369676e617460448201527f7572650000000000000000000000000000000000000000000000000000000000606482015260840161082b565b505060408051602081019091526000808252909890975095505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff16331461046e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161082b565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60015473ffffffffffffffffffffffffffffffffffffffff16331461046e57600080fd5b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f6d757374206f7665727269646500000000000000000000000000000000000000604482015260640161082b565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01610663565b6000806000610c318585610c46565b91509150610c3e81610c8b565b509392505050565b6000808251604103610c7c5760208301516040840151606085015160001a610c7087828585610e3e565b94509450505050610c84565b506000905060025b9250929050565b6000816004811115610c9f57610c9f611269565b03610ca75750565b6001816004811115610cbb57610cbb611269565b03610d22576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161082b565b6002816004811115610d3657610d36611269565b03610d9d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161082b565b6003816004811115610db157610db1611269565b0361083d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f7565000000000000000000000000000000000000000000000000000000000000606482015260840161082b565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115610e755750600090506003610f24565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610ec9573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff8116610f1d57600060019250925050610f24565b9150600090505b94509492505050565b600060208284031215610f3f57600080fd5b813563ffffffff81168114610f5357600080fd5b9392505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461083d57600080fd5b60008060408385031215610f8f57600080fd5b8235610f9a81610f5a565b946020939093013593505050565b600060208284031215610fba57600080fd5b8135610f5381610f5a565b60008060008060608587031215610fdb57600080fd5b843560038110610fea57600080fd5b9350602085013567ffffffffffffffff8082111561100757600080fd5b818701915087601f83011261101b57600080fd5b81358181111561102a57600080fd5b88602082850101111561103c57600080fd5b95986020929092019750949560400135945092505050565b6000610160828403121561106757600080fd5b50919050565b60006020828403121561107f57600080fd5b813567ffffffffffffffff81111561109657600080fd5b6110a284828501611054565b949350505050565b6000806000606084860312156110bf57600080fd5b833567ffffffffffffffff8111156110d657600080fd5b6110e286828701611054565b9660208601359650604090950135949350505050565b604081526000835180604084015260005b818110156111265760208187018101516060868401015201611109565b81811115611138576000606083860101525b50602083019390935250601f919091017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01601606001919050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126111a857600080fd5b83018035915067ffffffffffffffff8211156111c357600080fd5b602001915036819003821315610c8457600080fd5b8183823760009101908152919050565b6000602082840312156111fa57600080fd5b5051919050565b60008282101561123a577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500390565b6000808585111561124f57600080fd5b8386111561125c57600080fd5b5050820193919092039150565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fdfea26469706673582212205ea8c138566409f4dc6dd2337513f1ba813cbc59d1f60957829d018df99de6f464736f6c634300080f0033";
    static readonly abi: ({
        inputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        stateMutability: string;
        type: string;
        anonymous?: undefined;
        name?: undefined;
        outputs?: undefined;
    } | {
        anonymous: boolean;
        inputs: {
            indexed: boolean;
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        type: string;
        stateMutability?: undefined;
        outputs?: undefined;
    } | {
        inputs: ({
            components: {
                internalType: string;
                name: string;
                type: string;
            }[];
            internalType: string;
            name: string;
            type: string;
        } | {
            internalType: string;
            name: string;
            type: string;
            components?: undefined;
        })[];
        name: string;
        outputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        stateMutability: string;
        type: string;
        anonymous?: undefined;
    })[];
    static createInterface(): VerifyingPaymasterInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): VerifyingPaymaster;
}
export {};
